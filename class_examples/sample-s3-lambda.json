{
    "Parameters": {
        "AccountID": {
            "Default": "955304207641",
            "Description": "AWS Account ID",
            "Type": "String"
        },
        "FunctionName": {
            "Default": "DemoS3Lambda",
            "Description": "Lambda Function Name",
            "Type": "String"
        },
        "Account": {
            "Default": "kubex-aws",
            "Description": "AWS Account",
            "Type": "String"
        },
        "Region": {
            "Default": "us-east-2",
            "Description": "AWS Region",
            "Type": "String"
        },
        "RawBucketName1": {
            "Default": "my-aws-training-s3-bucket",
            "Description": "raw bucket name",
            "Type": "String"
        },
        "RawBucketName2": {
            "Default": "aws-training-bucket-qwer",
            "Description": "raw bucket name",
            "Type": "String"
        },
        "S3KmsKeyAlias": {
            "Default": "alias/CyberS3KmsAlias",
            "Description": "KmsKey to encrypt and decrypt objects in the raw bucket",
            "Type": "String"
        },
        "S3KmsKeyArn": {
            "Default": "arn:aws:kms:us-east-2:955304207641:key/mrk-eb81387515f344dd839945ca063c8577",
            "Description": "KmsKey to encrypt and decrypt objects in the raw bucket",
            "Type": "String"
        },
        "RoleName": {
            "Default": "DemoLambdaRole",
            "Description": "Lambda Function Role Name",
            "Type": "String"
        }
    },
    "Resources": {
        "DemoLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Architectures": [
                    "arm64"
                ],
                "Code": {
                    "S3Bucket": "trainingqwer",
                    "S3Key": "Lambda/files/dynamodb_lambda.zip"
                },
                "Description": "This is a demo lambda template",
                "EphemeralStorage": {
                    "Size": 1024
                },
                "FunctionName": {
                    "Ref": "FunctionName"
                },
                "Handler": "dynamodb_lambda.lambda_handler",
                "MemorySize": 128,
                "PackageType": "Zip",
                "Role": {
                    "Fn::GetAtt": [
                        "DemoLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.11",
                "Tags": [
                    {
                        "Key": "Developer",
                        "Value": "Jake"
                    },
                    {
                        "Key": "SupportEmail",
                        "Value": "aaaa@gamil.com"
                    }
                ],
                "Timeout": 60
            }
        },
        "DemoLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "DemoLambdaS3Policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "ReadAccess",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:GetObjectVersion"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "RawBucketName1"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "RawBucketName1"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "WriteAccess",
                                    "Action": [
                                        "s3:PutObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "RawBucketName2"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "RawBucketName2"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DemoLambdaLogPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "LogAccess",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DemoLambdaKMSPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Encrypt",
                                        "kms:Decrypt",
                                        "kms:ReEncrypt*",
                                        "kms:GenerateDataKey*",
                                        "kms:DescribeKey"
                                    ],
                                    "Resource": {
                                        "Ref": "S3KmsKeyArn"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "Account"
                            },
                            {
                                "Ref": "AWS::Region"
                            },
                            {
                                "Ref": "RoleName"
                            }
                        ]
                    ]
                }
            }
        }
    }
}